#include<bits/stdc++.h>
using namespace std;
void KthSetBit(int n,int k){
    if(n&(1<<(k-1))!=0){
        cout<<"Yes";
    }
    else
       cout<<"No";
}
void KthSetBit2(int n,int k){
    if((n>>(k-1))&1==1){
        cout<<"Yes";
    }
    else{
        cout<<"No";
    }
}
//Given an array arr[] of N positive elements.
//The task is to find the Maximum AND Value generated by any pair of the element from the array.
int findMaxium1(int a[], int n)
{
    int maxi = 0;
    for(int i = 0;i<n;i++) 
    {
        for(int j = i+1;j<n;j++)
            maxi = max(maxi, a[i] & a[j]); 
    }
    return maxi; 
}
// Utility function to check number of elements
// having set msb as of pattern
int checkBit(int pattern, int arr[], int n)
{
    int count = 0;
    for (int i = 0; i < n; i++)
        if ((pattern & arr[i]) == pattern)
            count++;
    return count;
}
 
// Function for finding maximum and value pair
int maxAND(int arr[], int n)
{
    int res = 0, count;
 
    // iterate over total of 32bits from msb to lsb
    for (int bit = 31; bit >= 0; bit--) {
        // find the count of element having same pattern as
        // obtained by adding bits on every iteration.
        count = checkBit(res | (1 << bit), arr, n);
 
        // if count >= 2 set particular bit in result
        if (count >= 2)
            res = res | (1 << bit); // this is the pattern we continued
    }
 
    return res;
}